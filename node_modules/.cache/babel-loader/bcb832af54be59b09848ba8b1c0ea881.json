{"ast":null,"code":"var _jsxFileName = \"/Users/Henry/Dropbox/WebDev/banana-leaderboard/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport './App.css';\nimport Leaderboard from './data/leaderboard.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [searchInput, setSearchInput] = useState('');\n  const [renderArr, setRenderArr] = useState([]);\n  const [currentUserId, setCurrentUserId] = useState(true); // Sort converts number into string so instead we execute compareFunction. Thereby, comparing return value of the compare function instead, which in our case is typeOf Number.\n  // If a > b sort a after b\n  // If b > a sort b after a\n  // If a = b do not change order\n  // return b-a to sort in descending order\n  // here we sort by numbers of bananas\n\n  const sortDescending = Object.values(Leaderboard).splice('').sort((a, b) => {\n    return b.bananas - a.bananas;\n  }); // Modified sortDescending Array of objects and inserted a rank property\n\n  const rankedArray = () => {\n    let rank = 1;\n\n    for (let i = 0; i < sortDescending.length; i++) {\n      // increase rank only if current bananas are less than previous\n      if (i > 0 && sortDescending[i].bananas < sortDescending[i - 1].bananas) {\n        rank++;\n      }\n\n      sortDescending[i].rank = rank;\n    }\n  };\n\n  rankedArray(); //sortDescending is ranked\n\n  const top10BananasCount = [...sortDescending].slice(0, 10); //Create new array limited to people with top 10 bananas\n\n  const onClick = () => {\n    // If uid matches searchInput returns the found object sortDescending Array\n    const findPersonById = sortDescending.find(person => {\n      if (searchInput !== person.uid) {\n        return;\n      }\n\n      return person.uid === searchInput;\n    }); //if person banana count rank is more than 10 remove rank 10 and replace with found person\n\n    if ((findPersonById === null || findPersonById === void 0 ? void 0 : findPersonById.rank) > 10) {\n      top10BananasCount.pop();\n      top10BananasCount.push(findPersonById);\n      setRenderArr(top10BananasCount);\n      setCurrentUserId(findPersonById === null || findPersonById === void 0 ? void 0 : findPersonById.uid);\n    }\n\n    setRenderArr(top10BananasCount);\n    setCurrentUserId(findPersonById === null || findPersonById === void 0 ? void 0 : findPersonById.uid);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"input-group mb-3 mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"Insert User ID\",\n        onChange: e => {\n          setSearchInput(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-outline-primary\",\n        type: \"button\",\n        onClick: onClick,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Rank\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Number Of Bananas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"isCurrentUser?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: renderArr.map(data => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.rank\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.bananas\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.uid === currentUserId ? 'Yes' : 'No'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 19\n            }, this)]\n          }, data.uid, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"TnA5Gwr61uqXP2b3itkGUKaYq0M=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Leaderboard","App","searchInput","setSearchInput","renderArr","setRenderArr","currentUserId","setCurrentUserId","sortDescending","Object","values","splice","sort","a","b","bananas","rankedArray","rank","i","length","top10BananasCount","slice","onClick","findPersonById","find","person","uid","pop","push","e","target","value","map","data","name"],"sources":["/Users/Henry/Dropbox/WebDev/banana-leaderboard/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport './App.css';\nimport Leaderboard from './data/leaderboard.json';\n\nconst App = () => {\n\n  const [searchInput, setSearchInput] = useState('');\n  const [renderArr, setRenderArr] = useState([]);\n  const [currentUserId, setCurrentUserId] = useState(true);\n \n  // Sort converts number into string so instead we execute compareFunction. Thereby, comparing return value of the compare function instead, which in our case is typeOf Number.\n  // If a > b sort a after b\n  // If b > a sort b after a\n  // If a = b do not change order\n  // return b-a to sort in descending order\n  // here we sort by numbers of bananas\n\n  const sortDescending = Object.values(Leaderboard).splice('').sort((a, b) => {\n    return b.bananas - a.bananas;\n  });\n\n  // Modified sortDescending Array of objects and inserted a rank property\n  const rankedArray = () => {\n    let rank = 1;\n    for (let i = 0; i < sortDescending.length; i++) {\n    // increase rank only if current bananas are less than previous\n    if (i > 0 && sortDescending[i].bananas < sortDescending[i - 1].bananas) {\n      rank++;\n    }\n      sortDescending[i].rank = rank;\n    } \n  }\n  rankedArray(); //sortDescending is ranked\n\n  const top10BananasCount = [...sortDescending].slice(0,10); //Create new array limited to people with top 10 bananas\n\n  const onClick = () => {\n    // If uid matches searchInput returns the found object sortDescending Array\n    const findPersonById = sortDescending.find((person) => {\n      if(searchInput !== person.uid){\n        return;\n      }\n      return person.uid === searchInput;\n    });\n    //if person banana count rank is more than 10 remove rank 10 and replace with found person\n    if(findPersonById?.rank > 10){\n      top10BananasCount.pop();\n      top10BananasCount.push(findPersonById);\n      setRenderArr(top10BananasCount);\n      setCurrentUserId(findPersonById?.uid);\n    } \n    setRenderArr(top10BananasCount);\n    setCurrentUserId(findPersonById?.uid);\n  }\n \n  return (\n    <div className=\"container\">\n      <form className=\"input-group mb-3 mt-5\">\n        <input type=\"text\" className=\"form-control\" placeholder=\"Insert User ID\" onChange={ (e) => {\n            setSearchInput(e.target.value);\n          }}\n        />\n        <button className=\"btn btn-outline-primary\" type=\"button\" onClick={onClick}>\n          Search\n        </button>\n      </form>\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th scope=\"col\">Name</th>\n            <th scope=\"col\">Rank</th>\n            <th scope=\"col\">Number Of Bananas</th>\n            <th scope=\"col\">isCurrentUser?</th>\n          </tr>\n        </thead>\n        <tbody>\n          {renderArr.map((data) => {\n            return (\n                <tr key={data.uid}>\n                  <td>{data.name}</td>\n                  <td>{data.rank}</td>\n                  <td>{data.bananas}</td>\n                  <td>{data.uid === currentUserId ? 'Yes': 'No'}</td>\n                </tr>\n            );\n          })}          \n        </tbody>  \n      </table>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,WAAP;AACA,OAAOC,WAAP,MAAwB,yBAAxB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAEhB,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,EAAD,CAA9C;EACA,MAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;EACA,MAAM,CAACO,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,CAAC,IAAD,CAAlD,CAJgB,CAMhB;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMS,cAAc,GAAGC,MAAM,CAACC,MAAP,CAAcV,WAAd,EAA2BW,MAA3B,CAAkC,EAAlC,EAAsCC,IAAtC,CAA2C,CAACC,CAAD,EAAIC,CAAJ,KAAU;IAC1E,OAAOA,CAAC,CAACC,OAAF,GAAYF,CAAC,CAACE,OAArB;EACD,CAFsB,CAAvB,CAbgB,CAiBhB;;EACA,MAAMC,WAAW,GAAG,MAAM;IACxB,IAAIC,IAAI,GAAG,CAAX;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGV,cAAc,CAACW,MAAnC,EAA2CD,CAAC,EAA5C,EAAgD;MAChD;MACA,IAAIA,CAAC,GAAG,CAAJ,IAASV,cAAc,CAACU,CAAD,CAAd,CAAkBH,OAAlB,GAA4BP,cAAc,CAACU,CAAC,GAAG,CAAL,CAAd,CAAsBH,OAA/D,EAAwE;QACtEE,IAAI;MACL;;MACCT,cAAc,CAACU,CAAD,CAAd,CAAkBD,IAAlB,GAAyBA,IAAzB;IACD;EACF,CATD;;EAUAD,WAAW,GA5BK,CA4BD;;EAEf,MAAMI,iBAAiB,GAAG,CAAC,GAAGZ,cAAJ,EAAoBa,KAApB,CAA0B,CAA1B,EAA4B,EAA5B,CAA1B,CA9BgB,CA8B2C;;EAE3D,MAAMC,OAAO,GAAG,MAAM;IACpB;IACA,MAAMC,cAAc,GAAGf,cAAc,CAACgB,IAAf,CAAqBC,MAAD,IAAY;MACrD,IAAGvB,WAAW,KAAKuB,MAAM,CAACC,GAA1B,EAA8B;QAC5B;MACD;;MACD,OAAOD,MAAM,CAACC,GAAP,KAAexB,WAAtB;IACD,CALsB,CAAvB,CAFoB,CAQpB;;IACA,IAAG,CAAAqB,cAAc,SAAd,IAAAA,cAAc,WAAd,YAAAA,cAAc,CAAEN,IAAhB,IAAuB,EAA1B,EAA6B;MAC3BG,iBAAiB,CAACO,GAAlB;MACAP,iBAAiB,CAACQ,IAAlB,CAAuBL,cAAvB;MACAlB,YAAY,CAACe,iBAAD,CAAZ;MACAb,gBAAgB,CAACgB,cAAD,aAACA,cAAD,uBAACA,cAAc,CAAEG,GAAjB,CAAhB;IACD;;IACDrB,YAAY,CAACe,iBAAD,CAAZ;IACAb,gBAAgB,CAACgB,cAAD,aAACA,cAAD,uBAACA,cAAc,CAAEG,GAAjB,CAAhB;EACD,CAjBD;;EAmBA,oBACE;IAAK,SAAS,EAAC,WAAf;IAAA,wBACE;MAAM,SAAS,EAAC,uBAAhB;MAAA,wBACE;QAAO,IAAI,EAAC,MAAZ;QAAmB,SAAS,EAAC,cAA7B;QAA4C,WAAW,EAAC,gBAAxD;QAAyE,QAAQ,EAAIG,CAAD,IAAO;UACvF1B,cAAc,CAAC0B,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;QACD;MAFH;QAAA;QAAA;QAAA;MAAA,QADF,eAKE;QAAQ,SAAS,EAAC,yBAAlB;QAA4C,IAAI,EAAC,QAAjD;QAA0D,OAAO,EAAET,OAAnE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QALF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAUE;MAAO,SAAS,EAAC,OAAjB;MAAA,wBACE;QAAA,uBACE;UAAA,wBACE;YAAI,KAAK,EAAC,KAAV;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,eAEE;YAAI,KAAK,EAAC,KAAV;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAFF,eAGE;YAAI,KAAK,EAAC,KAAV;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAHF,eAIE;YAAI,KAAK,EAAC,KAAV;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAJF;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF,eASE;QAAA,UACGlB,SAAS,CAAC4B,GAAV,CAAeC,IAAD,IAAU;UACvB,oBACI;YAAA,wBACE;cAAA,UAAKA,IAAI,CAACC;YAAV;cAAA;cAAA;cAAA;YAAA,QADF,eAEE;cAAA,UAAKD,IAAI,CAAChB;YAAV;cAAA;cAAA;cAAA;YAAA,QAFF,eAGE;cAAA,UAAKgB,IAAI,CAAClB;YAAV;cAAA;cAAA;cAAA;YAAA,QAHF,eAIE;cAAA,UAAKkB,IAAI,CAACP,GAAL,KAAapB,aAAb,GAA6B,KAA7B,GAAoC;YAAzC;cAAA;cAAA;cAAA;YAAA,QAJF;UAAA,GAAS2B,IAAI,CAACP,GAAd;YAAA;YAAA;YAAA;UAAA,QADJ;QAQD,CATA;MADH;QAAA;QAAA;QAAA;MAAA,QATF;IAAA;MAAA;MAAA;MAAA;IAAA,QAVF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAmCD,CAtFD;;GAAMzB,G;;KAAAA,G;AAwFN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}